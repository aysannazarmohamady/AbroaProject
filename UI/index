<?php
$token = "7011288395:AAGw0LntfB4s3ItqaT_buL4eIusRF2TZUi8";
$apiUrl = "https://api.telegram.org/bot$token/";
$channelUsername = "@JetApply";
$dataFile = "user_data.json";

$update = file_get_contents("php://input");
$updateArray = json_decode($update, true);

if (isset($updateArray['message'])) {
    $chatId = $updateArray['message']['chat']['id'];
    $message = $updateArray['message']['text'];
    $userId = $updateArray['message']['from']['id'];

    if (!isChannelMember($userId, $channelUsername)) {
        inviteToChannel($chatId);
        exit;
    }

    switch ($message) {
        case "/start":
            sendMainMenu($chatId);
            break;
        case "üîç Search Opportunities":
            sendSearchOpportunitiesMenu($chatId);
            break;
        case "üìä Display Based on Your Profile":
            searchOpportunities($chatId, $userId);
            break;
        case "üîé New Search":
            sendNewSearchMenu($chatId);
            break;
        case "üë§ User Profile":
            requestUserProfile($chatId, $userId);
            break;
        case "ü§ñ AI Assistant":
            sendAIAssistantMenu($chatId);
            break;
        case "‚ùì Help and Support":
            sendHelpAndSupport($chatId);
            break;
        case "üìã View/Edit Profile":
            viewEditProfile($chatId, $userId);
            break;
        case "üîô Back to Main Menu":
            sendMainMenu($chatId);
            break;
        case "üß† Prompting":
            sendPromptingMenu($chatId);
            break;
        case "üìù Resume Writing":
        case "‚úâÔ∏è Cover Letter Writing":
        case "üìß Email Writing":
            handlePromptingOption($chatId, $message);
            break;
        case "üßë‚Äçüè´ Search Supervisors":
            handleSearchSupervisors($chatId);
            break;
        case "üìÖ Latest opportunities":
            handleLatestOpportunities($chatId);
            break;
        case "üåç Global Search":
            handleGlobalSearch($chatId, $userId,$message);
            break;
        default:
            handleProfileData($chatId, $message, $userId);
            break;
    }
}

function sendMessage($chatId, $message, $keyboard = null) {
    global $apiUrl;
    $url = $apiUrl . "sendMessage?chat_id=" . $chatId . "&text=" . urlencode($message);
    if ($keyboard) {
        $url .= "&reply_markup=" . urlencode(json_encode($keyboard));
    }
    file_get_contents($url);
}

function sendMainMenu($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üîç Search Opportunities"], ["text" => "üë§ User Profile"]],
            [["text" => "ü§ñ AI Assistant"], ["text" => "‚ùì Help and Support"]],
            [["text" => "üìã View/Edit Profile"], ["text" => "üßë‚Äçüè´ Search Supervisors"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Please choose an option from the main menu:", $keyboard);
}

function sendSearchOpportunitiesMenu($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üìä Display Based on Your Profile"], ["text" => "üîé New Search"]],
            [["text" => "üîô Back to Main Menu"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Please choose an option for searching opportunities:", $keyboard);
}

function sendNewSearchMenu($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üìÖ Latest opportunities"], ["text" => "üåç Global Search"]],
            [["text" => "üîô Back to Main Menu"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Please choose a search option:", $keyboard);
}

function handleLatestOpportunities($chatId) {
    sendMessage($chatId, "Searching for the latest opportunities...");
    LatestPosts($chatId);
}

function handleGlobalSearch($chatId, $userId,$message) {
    requestGlobalSearchKeyword($chatId, $userId,$message);
}

function requestGlobalSearchKeyword($chatId, $userId,$message) {
    sendMessage($chatId, "Please enter a keyword for the global search:");
    $data = loadData();
    $data[$userId]['step'] = 'global_search';
    saveData($data);
}

function sendAIAssistantMenu($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üß† Prompting"]],
            [["text" => "üîô Back to Main Menu"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "AI Assistant Menu:", $keyboard);
}

function sendPromptingMenu($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üìù Resume Writing"], ["text" => "‚úâÔ∏è Cover Letter Writing"]],
            [["text" => "üìß Email Writing"]],
            [["text" => "üîô Back to Main Menu"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Prompting Menu:", $keyboard);
}

function handlePromptingOption($chatId, $option) {
    switch ($option) {
        case "üìù Resume Writing":
            $message = "I have a job posting for the role of [Job Title] at [Company Name]. Please review the key requirements and responsibilities listed in the job description below, and then rewrite/update my existing resume to highlight the most relevant skills, experiences, and accomplishments that align with what the employer is looking for in an ideal candidate.

[Paste the full job description text here]

Here is my current resume:
[Paste your existing resume content here]

When rewriting my resume, please:
- Update the resume summary/objective to speak directly to this role
- Reorder and tweak the experience/skills sections to prioritize the most relevant qualifications 
- Use keyword phrases pulled from the job description where applicable
- Quantify achievements with metrics/numbers where possible
- Keep the resume concise, focusing on only the most pertinent details for this role

The goal is to create a tailored version of my resume that clearly showcases why I'm a strong fit for this particular position based on the stated requirements. Please maintain a professional tone throughout.";
            sendMessage($chatId, $message);
            break;
        case "‚úâÔ∏è Cover Letter Writing":
            $message = "Please write a cover letter for an academic position using the following information:
Applicant's Resume:
[Insert full resume of the applicant here]
Academic Position Description:
[Insert full description of the academic position here]
Please write a compelling cover letter that:
Addresses the hiring committee or department chair
Expresses enthusiasm for the position
Highlights how the applicant's qualifications match the job requirements
Demonstrates knowledge of and interest in the institution
Explains how the applicant's research and teaching experience align with the position
Concludes with a strong statement of interest and availability for an interview
The cover letter should be professional, concise, and tailored to the specific position and institution. It should be approximately 1 page in length (3-4 paragraphs).
The system should:
Extract key information from the resume, including educational background, research experience, publications, teaching experience, awards, and technical skills
Identify key requirements and preferences from the position description
Extract information about the institution from the position description
Use this information to write a personalized and relevant cover letter";
            sendMessage($chatId, $message);
            break;
        case "üìß Email Writing":
            $message = "
**Subject Options:**

1. Application for PhD Position in [Specific Field]
2. Inquiry About PhD Supervision in [Specific Research Area]
3. Interest in PhD Research Under Your Supervision
4. Potential PhD Research Collaboration

**Body:**

Dear Professor [Supervisor's Last Name],

My name is [Your Full Name], and I am currently [Your Current Position/Status] at [Your Current Institution or Workplace]. I am writing to express my interest in pursuing a PhD under your supervision in the field of [Field of Study].

I have a strong background in [Your Relevant Experience or Education], where I [briefly describe your relevant experience or education]. I am particularly interested in your work on [Mention Specific Research or Publications of the Supervisor] and would like to contribute to this area through my research.

Attached to this email, you will find my resume and a brief research proposal that outlines my ideas and how they align with your current research projects. I would be honored to discuss this opportunity further and explore how my background and interests could contribute to your team.

Thank you for considering my application. I look forward to the possibility of working with you and contributing to your research.

Sincerely,

[Your Full Name]  
[Your Contact Information]  
[Your LinkedIn Profile, if applicable]  
[Attachment: Resume, Research Proposal]";
            sendMessage($chatId, $message);
            break;
    }
}

function requestUserProfile($chatId, $userId) {
    sendMessage($chatId, "Please enter your email (optional):");
    $data = loadData();
    $data[$userId]['step'] = 1;
    saveData($data);
}

function handleProfileData($chatId, $message, $userId) {
    $data = loadData();
    if (!isset($data[$userId]) || !isset($data[$userId]['step'])) {
        return;
    }
    
    if ($data[$userId]['step'] == 'search_supervisors') {
        $result = searchSupervisors($chatId,$userId,$message);
        sendMessage($chatId, $result);
        unset($data[$userId]['step']);
        saveData($data);
        sendMainMenu($chatId);
        return;
    }
    if ($data[$userId]['step'] == 'global_search') {
        $keyword = $message;
        sendMessage($chatId, "Searching globally for: $keyword");
        searchGlobal($chatId, $userId,$message);
        unset($data[$userId]['step']);
        saveData($data);
        sendMainMenu($chatId);
        return;
    }
    
    switch ($data[$userId]['step']) {
        case 1:
            $data[$userId]['email'] = $message;
            $data[$userId]['step'] = 2;
            sendMessage($chatId, "Please enter your phone number:");
            break;
        case 2:
            $data[$userId]['phone'] = $message;
            $data[$userId]['step'] = 3;
            sendMessage($chatId, "Please enter your country of residence:");
            break;
        case 3:
            $data[$userId]['residence'] = $message;
            $data[$userId]['step'] = 4;
            sendMessage($chatId, "Do you have a language certificate? (Yes/No)");
            break;
        case 4:
            $data[$userId]['language_certificate'] = $message;
            $data[$userId]['step'] = 5;
            sendFieldOfStudyKeyboard($chatId);
            break;
        case 5:
            if ($message == "üåç Other") {
                sendMessage($chatId, "Please enter your preferred field of study:");
                $data[$userId]['step'] = 5.1;
            } else {
                $data[$userId]['field'] = $message;
                $data[$userId]['step'] = 6;
                sendCountryKeyboard($chatId);
            }
            break;
        case 5.1:
            $data[$userId]['field'] = $message;
            $data[$userId]['step'] = 6;
            sendCountryKeyboard($chatId);
            break;
        case 6:
            if ($message == "üåç Other") {
                sendMessage($chatId, "Please enter your favorite country manually:");
                $data[$userId]['step'] = 6.1;
            } else {
                $data[$userId]['country'] = $message;
                $data[$userId]['step'] = 7;
                sendEducationLevelKeyboard($chatId);
            }
            break;
        case 6.1:
            $data[$userId]['country'] = $message;
            $data[$userId]['step'] = 7;
            sendEducationLevelKeyboard($chatId);
            break;
        case 7:
            $data[$userId]['education_level'] = $message;
            $data[$userId]['step'] = 8;
            sendCVUploadOption($chatId);
            break;
        case 8:
            if ($message == "Yes") {
                sendMessage($chatId, "Please upload your CV file.");
                $data[$userId]['step'] = 9;
            } elseif ($message == "No") {
                unset($data[$userId]['step']);
                saveData($data);
                sendMessage($chatId, "Your profile has been updated.");
                sendMainMenu($chatId);
            }
            break;
        case 9:
            if (isset($updateArray['message']['document'])) {
                $data[$userId]['cv_file_id'] = $updateArray['message']['document']['file_id'];
                unset($data[$userId]['step']);
                saveData($data);
                sendMessage($chatId, "Your CV has been uploaded and your profile has been updated.");
                sendMainMenu($chatId);
            } else {
                sendMessage($chatId, "Please upload a file for your CV.");
            }
            break;
    }
    saveData($data);
}

function sendFieldOfStudyKeyboard($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üß¨ Biology"], ["text" => "üíª Computer Science"]],
            [["text" => "üî¨ Physics"], ["text" => "üß™ Chemistry"]],
            [["text" => "üìä Mathematics"], ["text" => "üìö Literature"]],
            [["text" => "üé® Arts"], ["text" => "üèõÔ∏è History"]],
            [["text" => "üíº Business"], ["text" => "‚öñÔ∏è Law"]],
            [["text" => "üåç Other"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Please choose your preferred field of study:", $keyboard);
}

function sendCountryKeyboard($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üá¨üáß UK"], ["text" => "üá©üá™ Germany"]],
            [["text" => "üá®üá¶ Canada"], ["text" => "üá¶üá∫ Australia"]],
            [["text" => "üá≥üáø New Zealand"], ["text" => "üá´üá∑ France"]],
            [["text" => "üáÆüá™ Ireland"], ["text" => "üá∫üá∏ USA"]],
            [["text" => "üåç Other"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Please choose your preferred country:", $keyboard);
}

function sendEducationLevelKeyboard($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "üéì PhD"], ["text" => "üìö Master's"]],
            [["text" => "üî¨ Post-Doc"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Please choose your preferred education level:", $keyboard);
    
    // Notify the user that currently only PhD opportunities are available
    sendMessage($chatId, "‚ö†Ô∏è Currently, only PhD opportunities are available!");
}

function sendCVUploadOption($chatId) {
    $keyboard = [
        "keyboard" => [
            [["text" => "Yes"], ["text" => "No"]]
        ],
        "resize_keyboard" => true
    ];
    sendMessage($chatId, "Would you like to upload your CV?", $keyboard);
}

function viewEditProfile($chatId, $userId) {
    $data = loadData();
    if (isset($data[$userId])) {
        $profile = $data[$userId];
        $message = "Your Profile:\n\n";
        $message .= "Email: " . ($profile['email'] ?? "Not set") . "\n";
        $message .= "Phone: " . ($profile['phone'] ?? "Not set") . "\n";
        $message .= "Country of Residence: " . ($profile['residence'] ?? "Not set") . "\n";
        $message .= "Language Certificate: " . ($profile['language_certificate'] ?? "Not set") . "\n";
        $message .= "Field of Study: " . ($profile['field'] ?? "Not set") . "\n";
        $message .= "Preferred Country: " . ($profile['country'] ?? "Not set") . "\n";
        $message .= "Education Level: " . ($profile['education_level'] ?? "Not set") . "\n";
$message .= "CV: " . (isset($profile['cv_file_id']) ? "Uploaded" : "Not uploaded") . "\n\n";
        $message .= "To edit your profile, select 'User Profile' from the main menu.";
        sendMessage($chatId, $message);
    } else {
        sendMessage($chatId, "You haven't created a profile yet. Select 'User Profile' from the main menu to create one.");
    }
}

function loadData() {
    global $dataFile;
    if (!file_exists($dataFile)) {
        return [];
    }
    $json = file_get_contents($dataFile);
    return json_decode($json, true);
}

function saveData($data) {
    global $dataFile;
    $json = json_encode($data);
    file_put_contents($dataFile, $json);
}

function isChannelMember($userId, $channelUsername) {
    global $apiUrl;
    $url = $apiUrl . "getChatMember?chat_id=" . $channelUsername . "&user_id=" . $userId;
    $response = file_get_contents($url);
    $result = json_decode($response, true);
    
    if ($result['ok'] && in_array($result['result']['status'], ['member', 'administrator', 'creator'])) {
        return true;
    }
    return false;
}

function inviteToChannel($chatId) {
    global $channelUsername;
    $message = "To use this bot, you need to be a member of our channel. Please join " . $channelUsername . " and then start the bot again.";
    $keyboard = [
        "inline_keyboard" => [
            [["text" => "Join Channel", "url" => "https://t.me/" . ltrim($channelUsername, '@')]]
        ]
    ];
    sendMessage($chatId, $message, $keyboard);
}

function handleSearchSupervisors($chatId) {
    sendMessage($chatId, "To see a list of supervisors, please enter a keyword related to your research interest:");
    
    $data = loadData();
    $data[$chatId]['step'] = 'search_supervisors';
    saveData($data);
}

function searchSupervisors($chatId, $userId, $message) {
    $url = 'https://jet.aysan.dev/api_v2.php';
    $data = array(
        'action' => 'all',
        'keywords' => $message
    );
    
    $options = array(
        'http' => array(
            'header'  => "Content-type: application/json\r\n",
            'method'  => 'POST',
            'content' => json_encode($data)
        )
    );

    $context = stream_context_create($options);
    $result = file_get_contents($url, false, $context);
    sendMessage($chatId, $result);
    if ($result === FALSE) {
        sendMessage($chatId, "An error occurred while searching for opportunities. Please try again later.");
    } else {
        $response = json_decode($result, true);
        sendSearchResultsSupervisor($chatId, $response);
    }
}

function searchOpportunities($chatId, $userId) {
    $userData = loadData();
    if (!isset($userData[$userId])) {
        sendMessage($chatId, "Please complete your profile first by selecting 'User Profile' from the main menu.");
        return;
    }

    $userProfile = $userData[$userId];
    $title = clearDate($userProfile['field'] ?? '');
    $country = clearDate($userProfile['country'] ?? '');
    $url = 'https://jet.aysan.dev/api_v2.php';
    $data = array(
        'action' => 'search',
        'keyword' => trim($title),
        'country' => trim($country)
    );
    
    $options = array(
        'http' => array(
            'header'  => "Content-type: application/json\r\n",
            'method'  => 'POST',
            'content' => json_encode($data)
        )
    );

    $context = stream_context_create($options);
    $result = file_get_contents($url, false, $context);

    if ($result === FALSE) {
        sendMessage($chatId, "An error occurred while searching for opportunities. Please try again later.");
    } else {
        $response = json_decode($result, true);
        sendSearchResults($chatId, $response);
    }
}

function searchGlobal($chatId, $userId, $message) {
    $url = 'https://jet.aysan.dev/api_v2.php';
    $data = array(
        'action' => 'all',
        'keywords' => $message
    );
    
    $options = array(
        'http' => array(
            'header'  => "Content-type: application/json\r\n",
            'method'  => 'POST',
            'content' => json_encode($data)
        )
    );

    $context = stream_context_create($options);
    $result = file_get_contents($url, false, $context);
    sendMessage($chatId, $result);
    if ($result === FALSE) {
        sendMessage($chatId, "An error occurred while searching for opportunities. Please try again later.");
    } else {
        $response = json_decode($result, true);
        sendSearchResults($chatId, $response);
    }
}

function sendSearchResults($chatId, $results) {
    if (empty($results)) {
        sendMessage($chatId, "No opportunities found matching your profile. Try updating your profile or broadening your search criteria.");
        return;
    }

    foreach ($results as $opportunity) {
        $message = "üéì Opportunity Found:\n\n";
        if(isset($opportunity['title']) && !empty($opportunity['title']))
        {
            $message .= "üìå Title: " . ($opportunity['title'] ?? "N/A") . "\n";
        }
        
        if(isset($opportunity['country']) && !empty($opportunity['Country']))
        {$message .= "üåç Country: " . ($opportunity['Country'] ?? "N/A") . "\n";}
        if(isset($opportunity['Universit']) && !empty($opportunity['Universit'])){
        $message .= "üèõÔ∏è University: " . ($opportunity['University'] ?? "N/A") . "\n";}
        if(isset($opportunity['branch']) && !empty($opportunity['branch'])){
        $message .= "üî¨ Branch/Department: " . ($opportunity['branch'] ?? "N/A") . "\n";}
        if(isset($opportunity['Supervisors']) && !empty($opportunity['Supervisors'])){
        $message .= "üë®‚Äçüè´ Supervisor: " . ($opportunity['Supervisors'] ?? "N/A") . "\n";}
        if(isset($opportunity['Email']) && !empty($opportunity['Email'])){
        $message .= "üìß Email: " . ($opportunity['Email'] ?? "N/A") . "\n";}
        if(isset($opportunity['tags']) && !empty($opportunity['tags'])){
        $message .= "üî¨ Tags: " . ($opportunity['tags'] ?? "N/A") . "\n";}
        
        if(isset($opportunity['More Websites or Contacts']) && !empty($opportunity['More Websites or Contacts'])){
        $message .= "‚ÑπÔ∏è More Websites or Contacts: " . ($opportunity['More Websites or Contacts'] ?? "N/A") . "\n";}

        sendMessage($chatId, $message);
    }
}

function sendSearchResultsSupervisor($chatId, $results) {
    if (empty($results)) {
        sendMessage($chatId, "No supervisors found matching your criteria. Try broadening your search.");
        return;
    }

    foreach ($results as $supervisor) {
        $message = "üéì Supervisor Found:\n\n";
        if(isset($supervisor['supervisors']) && !empty($supervisor['supervisors']))
        {
            $message .= "üìå Name: " . ($supervisor['supervisors'] ?? "N/A") . "\n";
        }
        
        if(isset($supervisor['country']) && !empty($supervisor['Country']))
        {$message .= "üåç Country: " . ($supervisor['Country'] ?? "N/A") . "\n";}
        if(isset($supervisor['Universit']) && !empty($supervisor['Universit'])){
        $message .= "üèõÔ∏è University: " . ($supervisor['University'] ?? "N/A") . "\n";}
        if(isset($supervisor['branch']) && !empty($supervisor['branch'])){
        $message .= "üî¨ Branch/Department: " . ($supervisor['branch'] ?? "N/A") . "\n";}
        if(isset($supervisor['linkedin_link']) && !empty($supervisor['linkedin_link'])){
        $message .= "üë®‚Äçüè´ LinkedIn: " . ($supervisor['linkedin_link'] ?? "N/A") . "\n";}
        if(isset($supervisor['Email']) && !empty($supervisor['Email'])){
        $message .= "üìß Email: " . ($supervisor['Email'] ?? "N/A") . "\n";}
        if(isset($supervisor['tags']) && !empty($supervisor['tags'])){
        $message .= "üî¨ Tags: " . ($supervisor['tags'] ?? "N/A") . "\n";}
        
        if(isset($supervisor['More Websites or Contacts']) && !empty($supervisor['More Websites or Contacts'])){
        $message .= "‚ÑπÔ∏è More Websites or Contacts: " . ($supervisor['More Websites or Contacts'] ?? "N/A") . "\n";}

        sendMessage($chatId, $message);
    }
}

function clearDate($data)
{
    $data = trim($data);
    $data = explode(" ",$data);
    $data[0] = null;
    $data = implode(" ",$data);
    return $data;
}

function LatestPosts($chatId)
{
    $url = 'https://jet.aysan.dev/api_v2.php';
    $data = array(
        'action' => 'getLatestPosts'
    );
    
    $options = array(
        'http' => array(
            'header'  => "Content-type: application/json\r\n",
            'method'  => 'POST',
            'content' => json_encode($data)
        )
    );

    $context = stream_context_create($options);
    $result = file_get_contents($url, false, $context);
   
    if ($result === FALSE) {
        sendMessage($chatId, "An error occurred while searching for opportunities. Please try again later.");
    } else {
        $response = json_decode($result, true);
        sendSearchResults($chatId, $response);
    }
}

function sendHelpAndSupport($chatId) {
    $message = "Welcome to the Help and Support section!\n\n"
             . "This bot helps you search for academic opportunities and manage your profile. Here's a quick guide:\n\n"
             . "üîç Search Opportunities: Find opportunities based on your profile or perform a new search.\n"
             . "üë§ User Profile: Set up or edit your personal information.\n"
             . "ü§ñ AI Assistant: Get help with resume writing, cover letters, and emails.\n"
             . "üìã View/Edit Profile: Review or update your existing profile.\n"
             . "üßë‚Äçüè´ Search Supervisors: Find potential supervisors based on your research interests.\n\n"
             . "We're here to help you in your academic journey!";

    $keyboard = [
        "inline_keyboard" => [
            [["text" => "Contact Support", "url" => "https://t.me/Aysan_dev"]]
        ]
    ];

    sendMessage($chatId, $message, $keyboard);
}
